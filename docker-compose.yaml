services:
  seagull-database:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: data
    volumes:
      - seagull-postgres-data:/var/lib/postgresql/data
    ports:
      - "5440:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - seagull-shared-network

  seagull-minio:
    image: minio/minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - seagull-minio-data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 10s
    networks:
      - seagull-shared-network

  seagull-createbuckets:
    image: minio/mc
    depends_on:
      seagull-minio:
        condition: service_healthy
    restart: on-failure
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc alias set dockerminio http://seagull-minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb dockerminio/user/avatar;
      /usr/bin/mc mb dockerminio/user/banner;
      /usr/bin/mc mb dockerminio/island/avatar;
      /usr/bin/mc mb dockerminio/island/banner;
      exit 0;
      "
    networks:
      - seagull-shared-network

  seagull-backend:
    build:
      context: ./Seagull
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      seagull-database:
        condition: service_healthy
      seagull-minio:
        condition: service_healthy
    env_file: .env
    networks:
      - seagull-shared-network

volumes:
  seagull-postgres-data:
  seagull-minio-data:

networks:
  seagull-shared-network:
    driver: bridge
    external: true